openapi: 3.0.0
info:
  title: OSAPI - A CRUD API for managing Linux systems
  description: |
    OSAPI is a lightweight, minimalistic RESTful API designed to manage and
    configure Linux systems as appliances. The API provides comprehensive
    management capabilities, including reading the current state of the system
    and making privileged, asynchronous changes to match a desired configuration
    state.

    OSAPI is built with pluggability and extensibility in mind, allowing it to
    adapt to different Linux distributions and environments by implementing
    custom handlers for various system operations.

    Key Features:
    - **RESTful API Design:** A RESTful approach for managing Linux systems,
      enabling clear and organized endpoints for system configurations,
      diagnostics, and state management.
    - **Pluggable Architecture:** Easily extend or replace components to suit
      different Linux environments. This flexibility allows users to customize
      behavior based on specific distribution requirements or operational needs.
    - **Task Queue for Privileged Actions:** Asynchronous task execution to
      perform system modifications securely, ensuring that changes are managed
      in a controlled and orderly manner.
    - **System Information Gathering:** Provides detailed system insights, such
      as OS details, hostname, and other environment-specific information,
      facilitating diagnostics and monitoring.
    - **CLI Equivalence:** All functionalities accessible via the API are also
      available through an equivalent command-line interface, making the tool
      adaptable to both programmatic and manual use cases.
    - **Written in Go:** The API and its supporting tools are written in Go,
      ensuring high performance, low resource usage, and easy cross-platform
      deployment.
  version: 1.0.0
  contact:
    url: https://github.com/retr0h/osapi
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://127.0.0.1:8080
    description: Mock API (local).
tags:
  - name: Network_Management_API_network_operations
    x-displayName: Network
    description: Operations related to the network endpoint.
  - name: Network_Management_API_dns_operations
    x-displayName: Network/DNS
    description: Operations related to DNS configuration.
  - name: Minimal_ping_API_Endpoint_ping_operations
    x-displayName: Ping
    description: Operations related to the ping endpoint.
  - name: Queue_API_queue_operations
    x-displayName: Queue
    description: Operations related to the queue endpoint.
  - name: System_Management_API_system_operations
    x-displayName: System
    description: Operations related to the system endpoint.
  - name: System_Management_API_system_status
    x-displayName: System/Status
    description: Operations related to system status endpoint.
paths:
  /network/dns:
    get:
      summary: List DNS servers
      description: Retrieve the list of currently configured DNS servers.
      tags:
        - Network_Management_API_dns_operations
      operationId: GetNetworkDNS
      responses:
        '200':
          description: List of DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSConfig'
        '500':
          description: Error retrieving DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
    put:
      summary: Update DNS servers
      description: Update the system's DNS server configuration.
      tags:
        - Network_Management_API_dns_operations
      operationId: PutNetworkDNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNSConfigUpdate'
      responses:
        '200':
          description: DNS servers updated successfully.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error updating DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
  /network/dns/{serverId}:
    delete:
      summary: Delete a DNS server
      description: Remove a specific DNS server from the configuration.
      tags:
        - Network_Management_API_dns_operations
      operationId: DeleteNetworkDNSServerID
      parameters:
        - name: serverId
          in: path
          required: true
          schema:
            type: string
          description: Identifier of the DNS server to be deleted.
      responses:
        '204':
          description: DNS server deleted successfully.
        '404':
          description: DNS server not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error deleting DNS server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
  /ping:
    get:
      summary: Retrieve ping status
      tags:
        - Minimal_ping_API_Endpoint_ping_operations
      responses:
        '200':
          description: ping response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pong'
  /queue:
    get:
      summary: List all queue items
      description: Retrieve all items from the queue.
      tags:
        - Queue_API_queue_operations
      responses:
        '200':
          description: A list of queue items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueueItem'
        '500':
          description: Error retrieving queue items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue.ErrorResponse'
  /queue/{id}:
    get:
      summary: Get a queue item by ID
      description: Retrieve a specific queue item by its ID.
      tags:
        - Queue_API_queue_operations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The queue item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueItem'
        '404':
          description: Queue item not found.
        '500':
          description: Error retrieving queue item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue.ErrorResponse'
  /system/status:
    get:
      summary: Retrieve system status
      description: >-
        Get the current status of the system including hostname, uptime, load
        averages, memory, and disk usage.
      tags:
        - System_Management_API_system_status
      responses:
        '200':
          description: A JSON object containing the system's status information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
        '500':
          description: Error retrieving system status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system.ErrorResponse'
components:
  schemas:
    DNSConfig:
      type: object
      properties:
        servers:
          type: array
          description: List of configured DNS servers.
          items:
            type: string
            pattern: >-
              ^(?:(?:\d{1,3}\.){3}\d{1,3}|(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4})$
            description: IPv4 or IPv6 address of the DNS server.
        searchDomains:
          type: array
          description: List of search domains.
          items:
            type: string
    DNSConfigUpdate:
      type: object
      properties:
        servers:
          type: array
          description: New list of DNS servers to configure.
          items:
            type: string
            pattern: >-
              ^(?:(?:\d{1,3}\.){3}\d{1,3}|(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4})$
            description: IPv4 or IPv6 address of the DNS server.
        searchDomains:
          type: array
          description: New list of search domains to configure.
          items:
            type: string
    network.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve network status.
        details:
          type: string
          description: >-
            Additional details about the error, specifying which component
            failed.
          example: Failed to get DNS servers due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
    Pong:
      type: object
      required:
        - ping
      properties:
        ping:
          type: string
          example: pong
    QueueItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the queue item.
          example: m_6293e012e88beeedcaa32a66a183bc41
        created:
          type: string
          format: date-time
          description: Creation timestamp of the queue item.
        updated:
          type: string
          format: date-time
          description: Last updated timestamp of the queue item.
        body:
          type: string
          description: String representation of the body of the queue item.
          example: This is the body of the queue item
        timeout:
          type: string
          format: date-time
          description: Timeout timestamp for the queue item.
        received:
          type: integer
          description: Number of times the queue item has been received.
          example: 3
    queue.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve system status.
        details:
          type: string
          description: >-
            Additional details about the error, specifying which component
            failed.
          example: Failed to get hostname due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
    LoadAverage:
      type: object
      description: The system load averages for 1, 5, and 15 minutes.
      properties:
        1min:
          type: number
          description: Load average for the last 1 minute.
          example: 0.32
        5min:
          type: number
          description: Load average for the last 5 minutes.
          example: 0.28
        15min:
          type: number
          description: Load average for the last 15 minutes.
          example: 0.25
      required:
        - 1min
        - 5min
        - 15min
    Memory:
      type: object
      description: Memory usage information.
      properties:
        total:
          type: integer
          description: Total memory in bytes.
          example: 8388608
        free:
          type: integer
          description: Free memory in bytes.
          example: 2097152
        used:
          type: integer
          description: Used memory in bytes.
          example: 4194304
      required:
        - total
        - free
        - used
    Disk:
      type: object
      description: Local disk usage information.
      properties:
        name:
          type: string
          description: Disk identifier, e.g., "/dev/sda1".
          example: /dev/sda1
        total:
          type: integer
          description: Total disk space in bytes.
          example: 500000000000
        used:
          type: integer
          description: Used disk space in bytes.
          example: 250000000000
        free:
          type: integer
          description: Free disk space in bytes.
          example: 250000000000
      required:
        - name
        - total
        - used
        - free
    Disks:
      type: array
      description: List of local disk usage information.
      items:
        $ref: '#/components/schemas/Disk'
    SystemStatus:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname of the system.
          example: my-linux-server
        uptime:
          type: string
          description: The uptime of the system.
          example: 0 days, 4 hours, 1 minute
        load_average:
          $ref: '#/components/schemas/LoadAverage'
        memory:
          $ref: '#/components/schemas/Memory'
        disks:
          $ref: '#/components/schemas/Disks'
      required:
        - hostname
        - uptime
        - load_average
        - memory
        - disks
    system.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve system status.
        details:
          type: string
          description: >-
            Additional details about the error, specifying which component
            failed.
          example: Failed to get hostname due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
x-tagGroups:
  - name: Network Management API
    tags:
      - Network_Management_API_network_operations
      - Network_Management_API_dns_operations
  - name: Minimal ping API Endpoint
    tags:
      - Minimal_ping_API_Endpoint_ping_operations
  - name: Queue API
    tags:
      - Queue_API_queue_operations
  - name: System Management API
    tags:
      - System_Management_API_system_operations
      - System_Management_API_system_status
