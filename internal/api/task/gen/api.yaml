# Copyright (c) 2024 John Dewey
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
# #

---
openapi: 3.0.0
info:
  title: Task API
  version: 1.0.0
tags:
  - name: task_operations
    x-displayName: Task
    description: Operations related to the task endpoint.
paths:
  /task:
    post:
      summary: Add an task item
      description: Add a new task item.
      tags:
        - task_operations
      requestBody:
        description: The task item to add.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  format: byte
                  description: Base64-encoded representation of the body of the task item.
              required:
                - body
              additionalProperties: false
      responses:
        '201':
          description: The task item was added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskItemIdResponse'
        '400':
          description: Invalid request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error adding task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'

    get:
      summary: List all task items
      description: Retrieve all task items, including the total count.
      tags:
        - task_operations
      responses:
        '200':
          description: A list of task items with total count.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '500':
          description: Error retrieving task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'

  /task/status:
    get:
      summary: Returns the total number of task items
      tags:
        - task_operations
      responses:
        '200':
          description: A JSON object containing the total number of task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusResponse'
        '500':
          description: Error retrieving total number of task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'

  /task/{id}:
    get:
      summary: Get a task item by ID
      description: Retrieve a specific task item by its ID.
      tags:
        - task_operations
      operationId: GetTaskID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: The task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskItemResponse'
        '404':
          description: Task item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error retrieving task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'

    delete:
      summary: Delete a task item by ID
      description: Deletes a specific task item by its ID.
      tags:
        - task_operations
      operationId: DeleteTaskID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint64

      responses:
        '204':
          description: Task item deleted successfully. No content returned.
        '404':
          description: Task item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error deleting task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'

components:
  schemas:
    TaskItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: uint64
          description: Unique identifier of the task item.
          example: 1
        created:
          type: string
          format: date-time
          description: Creation timestamp of the task item.
        body:
          type: string
          format: byte
          description: Base64-encoded representation of the body of the task item.
          example: "U29tZSBleGFtcGxlIGJ5dGVzIGRhdGE="

    TaskItemIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: uint64
          description: Unique identifier of the task item.
          example: 1

    TaskResponse:
      type: object
      properties:
        total_items:
          type: integer
          description: The total number of task items.
          example: 42
        items:
          type: array
          items:
            $ref: '#/components/schemas/TaskItemResponse'

    TaskStatusResponse:
      type: object
      properties:
        total_items:
          type: integer
          description: The total number of task items.
          example: 42

    task.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: "Failed to retrieve system status."
        details:
          type: string
          description: Additional details about the error, specifying which component failed.
          example: "Failed to get hostname due to network timeout."
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
