// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHostnameProvider is a mock of HostnameProvider interface.
type MockHostnameProvider struct {
	ctrl     *gomock.Controller
	recorder *MockHostnameProviderMockRecorder
}

// MockHostnameProviderMockRecorder is the mock recorder for MockHostnameProvider.
type MockHostnameProviderMockRecorder struct {
	mock *MockHostnameProvider
}

// NewMockHostnameProvider creates a new mock instance.
func NewMockHostnameProvider(ctrl *gomock.Controller) *MockHostnameProvider {
	mock := &MockHostnameProvider{ctrl: ctrl}
	mock.recorder = &MockHostnameProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHostnameProvider) EXPECT() *MockHostnameProviderMockRecorder {
	return m.recorder
}

// GetHostname mocks base method.
func (m *MockHostnameProvider) GetHostname() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostname")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHostname indicates an expected call of GetHostname.
func (mr *MockHostnameProviderMockRecorder) GetHostname() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostname", reflect.TypeOf((*MockHostnameProvider)(nil).GetHostname))
}
