// Code generated by MockGen. DO NOT EDIT.
// Source: ../types.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dns "github.com/retr0h/osapi/internal/provider/network/dns"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// GetResolvConfByInterface mocks base method.
func (m *MockProvider) GetResolvConfByInterface(arg0 string) (*dns.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResolvConfByInterface", arg0)
	ret0, _ := ret[0].(*dns.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResolvConfByInterface indicates an expected call of GetResolvConfByInterface.
func (mr *MockProviderMockRecorder) GetResolvConfByInterface(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResolvConfByInterface", reflect.TypeOf((*MockProvider)(nil).GetResolvConfByInterface), arg0)
}

// SetResolvConfByInterface mocks base method.
func (m *MockProvider) SetResolvConfByInterface(arg0, arg1 []string, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetResolvConfByInterface", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetResolvConfByInterface indicates an expected call of SetResolvConfByInterface.
func (mr *MockProviderMockRecorder) SetResolvConfByInterface(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetResolvConfByInterface", reflect.TypeOf((*MockProvider)(nil).SetResolvConfByInterface), arg0, arg1, arg2)
}
