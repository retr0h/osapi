# Copyright (c) 2024 John Dewey
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

---
openapi: 3.0.0
info:
  title: Network Management API
  version: 1.0.0
tags:
  - name: network_operations
    x-displayName: Network
    description: Operations related to the network endpoint.
  - name: dns_operations
    x-displayName: Network/DNS
    description: Operations related to DNS configuration.

paths:
  /network/ping:
    post:
      summary: Ping a remote server
      description: Send a ping to a remote server to verify network connectivity.
      tags:
        - network_operations
      requestBody:
        description: The server to ping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: The IP address or hostname of the server to ping.
                  example: "8.8.8.8"
              required:
                - address
      responses:
        '200':
          description: Successful ping response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '400':
          description: Invalid request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error performing the ping operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'

  /network/dns:
    get:
      summary: List DNS servers
      description: Retrieve the list of currently configured DNS servers.
      tags:
        - dns_operations
      operationId: GetNetworkDNS
      responses:
        '200':
          description: List of DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSConfig'
        '500':
          description: Error retrieving DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'

    put:
      summary: Update DNS servers
      description: Update the system's DNS server configuration.
      tags:
        - dns_operations
      operationId: PutNetworkDNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNSConfigUpdate'
      responses:
        '200':
          description: DNS servers updated successfully.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error updating DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'

  /network/dns/{serverId}:
    delete:
      summary: Delete a DNS server
      description: Remove a specific DNS server from the configuration.
      tags:
        - dns_operations
      operationId: DeleteNetworkDNSServerID
      parameters:
        - name: serverId
          in: path
          required: true
          schema:
            type: string
          description: Identifier of the DNS server to be deleted.
      responses:
        '204':
          description: DNS server deleted successfully.
        '404':
          description: DNS server not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error deleting DNS server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'

components:
  schemas:
    PingResponse:
      type: object
      properties:
        packetsSent:
          type: integer
          description: Number of packets sent.
          example: 4
        packetsReceived:
          type: integer
          description: Number of packets received.
          example: 4
        packetLoss:
          type: number
          format: double
          description: Percentage of packet loss.
          example: 0.0
        minRTT:
          type: string
          description: Minimum round-trip time as a string in Go's time.Duration format.
          example: "14.637103ms"
        avgRTT:
          type: string
          description: Average round-trip time as a string in Go's time.Duration format.
          example: "18.647498ms"
        maxRTT:
          type: string
          description: Maximum round-trip time as a string in Go's time.Duration format.
          example: "24.309240ms"

    DNSConfig:
      type: object
      properties:
        servers:
          type: array
          description: List of configured DNS servers.
          items:
            type: string
            pattern: '^(?:(?:\d{1,3}\.){3}\d{1,3}|(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4})$'
            description: IPv4 or IPv6 address of the DNS server.
        search_domains:
          type: array
          description: List of search domains.
          items:
            type: string

    DNSConfigUpdate:
      type: object
      properties:
        servers:
          type: array
          description: New list of DNS servers to configure.
          items:
            type: string
            pattern: '^(?:(?:\d{1,3}\.){3}\d{1,3}|(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4})$'
            description: IPv4 or IPv6 address of the DNS server.
        search_domains:
          type: array
          description: New list of search domains to configure.
          items:
            type: string

    network.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve network status.
        details:
          type: string
          description: Additional details about the error, specifying which component failed.
          example: "Failed to get DNS servers due to network timeout."
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
