openapi: 3.0.0
info:
  title: OSAPI - A CRUD API for managing Linux systems
  description: |
    OSAPI is a lightweight, minimalistic RESTful API designed to manage and
    configure Linux systems as appliances. The API provides comprehensive
    management capabilities, including reading the current state of the system
    and making privileged, asynchronous changes to match a desired configuration
    state.

    OSAPI is built with pluggability and extensibility in mind, allowing it to
    adapt to different Linux distributions and environments by implementing
    custom handlers for various system operations.

    Key Features:
    - **RESTful API Design:** A RESTful approach for managing Linux systems,
      enabling clear and organized endpoints for system configurations,
      diagnostics, and state management.
    - **Pluggable Architecture:** Easily extend or replace components to suit
      different Linux environments. This flexibility allows users to customize
      behavior based on specific distribution requirements or operational needs.
    - **Task Worker for Privileged Actions:** Asynchronous task execution to
      perform system modifications securely, ensuring that changes are managed
      in a controlled and orderly manner.
    - **System Information Gathering:** Provides detailed system insights, such
      as OS details, hostname, and other environment-specific information,
      facilitating diagnostics and monitoring.
    - **CLI Equivalence:** All functionalities accessible via the API are also
      available through an equivalent command-line interface, making the tool
      adaptable to both programmatic and manual use cases.
    - **Written in Go:** The API and its supporting tools are written in Go,
      ensuring high performance, low resource usage, and easy cross-platform
      deployment.
  version: 1.0.0
  contact:
    url: https://github.com/retr0h/osapi
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://127.0.0.1:8080
    description: Mock API (local).
tags:
  - name: OSAPI_-_A_CRUD_API_for_managing_Linux_systems_info
    x-displayName: Info
    description: Operations related to the info endpoint.
  - name: Network_Management_API_network_operations
    x-displayName: Network
    description: Operations related to the network endpoint.
  - name: Network_Management_API_dns_operations
    x-displayName: Network/DNS
    description: Operations related to DNS configuration.
  - name: System_Management_API_system_operations
    x-displayName: System
    description: Operations related to the system endpoint.
  - name: System_Management_API_system_status
    x-displayName: System/Status
    description: Operations related to system status endpoint.
  - name: Task_API_task_operations
    x-displayName: Task
    description: Operations related to the task endpoint.
paths:
  /version:
    get:
      summary: Retrieve the software version
      description: Get the current version of the software running on the system.
      tags:
        - OSAPI_-_A_CRUD_API_for_managing_Linux_systems_info
      responses:
        '400':
          description: A common JSON error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /network/ping:
    post:
      summary: Ping a remote server
      description: Send a ping to a remote server to verify network connectivity.
      tags:
        - Network_Management_API_network_operations
      requestBody:
        description: The server to ping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: >-
                    The IP address of the server to ping. Supports both IPv4 and
                    IPv6.
                  example: 8.8.8.8
                  x-oapi-codegen-extra-tags:
                    validate: required,ip
              required:
                - address
      responses:
        '200':
          description: Successful ping response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '400':
          description: Invalid request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error performing the ping operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
  /network/dns/{interfaceName}:
    get:
      summary: List DNS servers
      description: >-
        Retrieve the list of currently configured DNS servers for a specific
        network interface.
      tags:
        - Network_Management_API_dns_operations
      operationId: GetNetworkDNSByInterface
      parameters:
        - name: interfaceName
          in: path
          required: true
          schema:
            type: string
            x-oapi-codegen-extra-tags:
              validate: required,alphanum
          description: >
            The name of the network interface to retrieve DNS configuration for.
            Must only contain letters and numbers.
      responses:
        '200':
          description: List of DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSConfigResponse'
        '400':
          description: Invalid interface name provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error retrieving DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
  /network/dns:
    put:
      summary: Update DNS servers
      description: Update the system's DNS server configuration.
      tags:
        - Network_Management_API_dns_operations
      operationId: PutNetworkDNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DNSConfigUpdateRequest'
      responses:
        '202':
          description: DNS servers update successfully accepted.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
        '500':
          description: Error updating DNS servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.ErrorResponse'
  /system/status:
    get:
      summary: Retrieve system status
      description: >-
        Get the current status of the system including hostname, uptime, load
        averages, memory, and disk usage.
      tags:
        - System_Management_API_system_status
      security:
        - BearerAuth:
            - read
      responses:
        '200':
          description: A JSON object containing the system's status information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatusResponse'
        '401':
          description: Unauthorized - API key required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error retrieving system status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /system/hostname:
    get:
      summary: Retrieve system hostname
      description: Get the current hostname of the system.
      tags:
        - System_Management_API_system_operations
      security:
        - BearerAuth:
            - read
      responses:
        '200':
          description: A JSON object containing the system's hostname.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostnameResponse'
        '401':
          description: Unauthorized - API key required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error retrieving hostname.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /task:
    post:
      summary: Add an task item
      description: Add a new task item.
      tags:
        - Task_API_task_operations
      requestBody:
        description: The task item to add.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: object
                  description: JSON representation of the task item.
                  properties:
                    type:
                      type: string
                      enum:
                        - dns
                        - shutdown
                      description: The type of task action to perform.
                    data:
                      type: object
                      description: The action-specific data.
                  required:
                    - type
                    - data
              required:
                - body
              additionalProperties: false
      responses:
        '201':
          description: The task item was added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskItemIdResponse'
        '400':
          description: Invalid request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error adding task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
    get:
      summary: List all task items
      description: Retrieve all task items, including the total count.
      tags:
        - Task_API_task_operations
      responses:
        '200':
          description: A list of task items with total count.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '500':
          description: Error retrieving task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
  /task/status:
    get:
      summary: Returns the total number of task items
      tags:
        - Task_API_task_operations
      responses:
        '200':
          description: A JSON object containing the total number of task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusResponse'
        '500':
          description: Error retrieving total number of task items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
  /task/{id}:
    get:
      summary: Get a task item by ID
      description: Retrieve a specific task item by its ID.
      tags:
        - Task_API_task_operations
      operationId: GetTaskID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: The task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskItemResponse'
        '404':
          description: Task item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error retrieving task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
    delete:
      summary: Delete a task item by ID
      description: Deletes a specific task item by its ID.
      tags:
        - Task_API_task_operations
      operationId: DeleteTaskID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '204':
          description: Task item deleted successfully. No content returned.
        '404':
          description: Task item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
        '500':
          description: Error deleting task item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task.ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve status.
        details:
          type: string
          description: Additional details about the error.
          example: Failed due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
    PingResponse:
      type: object
      properties:
        packets_sent:
          type: integer
          description: Number of packets sent.
          example: 4
        packets_received:
          type: integer
          description: Number of packets received.
          example: 4
        packet_loss:
          type: number
          format: double
          description: Percentage of packet loss.
          example: 0
        min_rtt:
          type: string
          description: Minimum round-trip time as a string in Go's time.Duration format.
          example: 14.637103ms
        avg_rtt:
          type: string
          description: Average round-trip time as a string in Go's time.Duration format.
          example: 18.647498ms
        max_rtt:
          type: string
          description: Maximum round-trip time as a string in Go's time.Duration format.
          example: 24.309240ms
    DNSConfigResponse:
      type: object
      properties:
        servers:
          type: array
          description: List of configured DNS servers.
          items:
            type: string
            description: IPv4 or IPv6 address of the DNS server.
        search_domains:
          type: array
          description: List of search domains.
          items:
            type: string
    DNSConfigUpdateRequest:
      type: object
      properties:
        servers:
          type: array
          x-oapi-codegen-extra-tags:
            validate: required_without=SearchDomains,omitempty,dive,ip,min=1
          description: New list of DNS servers to configure.
          items:
            type: string
            description: IPv4 or IPv6 address of the DNS server.
        search_domains:
          type: array
          x-oapi-codegen-extra-tags:
            validate: required_without=Servers,omitempty,dive,hostname,min=1
          description: New list of search domains to configure.
          items:
            type: string
        interface_name:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,alphanum
          description: >
            The name of the network interface to apply DNS configuration to.
            Must only contain letters and numbers.
    network.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve network status.
        details:
          type: string
          description: >-
            Additional details about the error, specifying which component
            failed.
          example: Failed to get DNS servers due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
    LoadAverageResponse:
      type: object
      description: The system load averages for 1, 5, and 15 minutes.
      properties:
        1min:
          type: number
          description: Load average for the last 1 minute.
          example: 0.32
        5min:
          type: number
          description: Load average for the last 5 minutes.
          example: 0.28
        15min:
          type: number
          description: Load average for the last 15 minutes.
          example: 0.25
      required:
        - 1min
        - 5min
        - 15min
    MemoryResponse:
      type: object
      description: Memory usage information.
      properties:
        total:
          type: integer
          description: Total memory in bytes.
          example: 8388608
        free:
          type: integer
          description: Free memory in bytes.
          example: 2097152
        used:
          type: integer
          description: Used memory in bytes.
          example: 4194304
      required:
        - total
        - free
        - used
    DiskResponse:
      type: object
      description: Local disk usage information.
      properties:
        name:
          type: string
          description: Disk identifier, e.g., "/dev/sda1".
          example: /dev/sda1
        total:
          type: integer
          description: Total disk space in bytes.
          example: 500000000000
        used:
          type: integer
          description: Used disk space in bytes.
          example: 250000000000
        free:
          type: integer
          description: Free disk space in bytes.
          example: 250000000000
      required:
        - name
        - total
        - used
        - free
    DisksResponse:
      type: array
      description: List of local disk usage information.
      items:
        $ref: '#/components/schemas/DiskResponse'
    SystemStatusResponse:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname of the system.
          example: my-linux-server
        uptime:
          type: string
          description: The uptime of the system.
          example: 0 days, 4 hours, 1 minute
        load_average:
          $ref: '#/components/schemas/LoadAverageResponse'
        memory:
          $ref: '#/components/schemas/MemoryResponse'
        disks:
          $ref: '#/components/schemas/DisksResponse'
        os_info:
          $ref: '#/components/schemas/OSInfoResponse'
      required:
        - hostname
        - uptime
        - load_average
        - memory
        - disks
        - os_info
    HostnameResponse:
      type: object
      description: The hostname of the system.
      properties:
        hostname:
          type: string
          description: The system's hostname.
          example: my-linux-server
      required:
        - hostname
    OSInfoResponse:
      type: object
      description: Operating system information.
      properties:
        distribution:
          type: string
          description: The name of the Linux distribution.
          example: Ubuntu
        version:
          type: string
          description: The version of the Linux distribution.
          example: '20.04'
      required:
        - distribution
        - version
    TaskItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: uint64
          description: Unique identifier of the task item.
          example: 1
        created:
          type: string
          format: date-time
          description: Creation timestamp of the task item.
        body:
          type: string
          format: byte
          description: Base64-encoded representation of the body of the task item.
          example: U29tZSBleGFtcGxlIGJ5dGVzIGRhdGE=
    TaskItemIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: uint64
          description: Unique identifier of the task item.
          example: 1
    TaskResponse:
      type: object
      properties:
        total_items:
          type: integer
          description: The total number of task items.
          example: 42
        items:
          type: array
          items:
            $ref: '#/components/schemas/TaskItemResponse'
    TaskStatusResponse:
      type: object
      properties:
        total_items:
          type: integer
          description: The total number of task items.
          example: 42
    task.ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that occurred.
          example: Failed to retrieve system status.
        details:
          type: string
          description: >-
            Additional details about the error, specifying which component
            failed.
          example: Failed to get hostname due to network timeout.
        code:
          type: integer
          description: The error code.
          example: 500
      required:
        - error
        - code
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
x-tagGroups:
  - name: OSAPI - A CRUD API for managing Linux systems
    tags:
      - OSAPI_-_A_CRUD_API_for_managing_Linux_systems_info
  - name: Network Management API
    tags:
      - Network_Management_API_network_operations
      - Network_Management_API_dns_operations
  - name: System Management API
    tags:
      - System_Management_API_system_operations
      - System_Management_API_system_status
  - name: Task API
    tags:
      - Task_API_task_operations
